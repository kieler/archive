/*
* generated by Xtext
*/

package de.cau.cs.kieler.kaom.text.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import de.cau.cs.kieler.core.annotations.text.services.AnnotationsGrammarAccess;

@Singleton
public class KaomGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class TopLevelEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TopLevelEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsImportAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cAnnotationsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_2_0_0 = (RuleCall)cAnnotationsAssignment_2_0.eContents().get(0);
		private final Keyword cEntityKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cIdAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cIdIDTerminalRuleCall_2_2_0 = (RuleCall)cIdAssignment_2_2.eContents().get(0);
		private final Assignment cNameAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_3_0 = (RuleCall)cNameAssignment_2_3.eContents().get(0);
		private final Alternatives cAlternatives_2_4 = (Alternatives)cGroup_2.eContents().get(4);
		private final Group cGroup_2_4_0 = (Group)cAlternatives_2_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_4_0_0 = (Keyword)cGroup_2_4_0.eContents().get(0);
		private final Alternatives cAlternatives_2_4_0_1 = (Alternatives)cGroup_2_4_0.eContents().get(1);
		private final Assignment cChildEntitiesAssignment_2_4_0_1_0 = (Assignment)cAlternatives_2_4_0_1.eContents().get(0);
		private final RuleCall cChildEntitiesEntityParserRuleCall_2_4_0_1_0_0 = (RuleCall)cChildEntitiesAssignment_2_4_0_1_0.eContents().get(0);
		private final Assignment cChildLinksAssignment_2_4_0_1_1 = (Assignment)cAlternatives_2_4_0_1.eContents().get(1);
		private final RuleCall cChildLinksLinkParserRuleCall_2_4_0_1_1_0 = (RuleCall)cChildLinksAssignment_2_4_0_1_1.eContents().get(0);
		private final Assignment cChildPortsAssignment_2_4_0_1_2 = (Assignment)cAlternatives_2_4_0_1.eContents().get(2);
		private final RuleCall cChildPortsPortParserRuleCall_2_4_0_1_2_0 = (RuleCall)cChildPortsAssignment_2_4_0_1_2.eContents().get(0);
		private final Assignment cChildRelationsAssignment_2_4_0_1_3 = (Assignment)cAlternatives_2_4_0_1.eContents().get(3);
		private final RuleCall cChildRelationsRelationParserRuleCall_2_4_0_1_3_0 = (RuleCall)cChildRelationsAssignment_2_4_0_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4_0_2 = (Keyword)cGroup_2_4_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_2_4_1 = (Keyword)cAlternatives_2_4.eContents().get(1);
		
		//TopLevelEntity returns Entity:
		//	{Entity} annotations+=ImportAnnotation* (annotations+=Annotation* "entity" id=ID name=STRING? ("{"
		//	(childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}" | ";"))?;
		public ParserRule getRule() { return rule; }

		//{Entity} annotations+=ImportAnnotation* (annotations+=Annotation* "entity" id=ID name=STRING? ("{"
		//(childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}" | ";"))?
		public Group getGroup() { return cGroup; }

		//{Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }

		//annotations+=ImportAnnotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//ImportAnnotation
		public RuleCall getAnnotationsImportAnnotationParserRuleCall_1_0() { return cAnnotationsImportAnnotationParserRuleCall_1_0; }

		//(annotations+=Annotation* "entity" id=ID name=STRING? ("{" (childEntities+=Entity | childLinks+=Link | childPorts+=Port
		//| childRelations+=Relation)* "}" | ";"))?
		public Group getGroup_2() { return cGroup_2; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_2_0() { return cAnnotationsAssignment_2_0; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_2_0_0() { return cAnnotationsAnnotationParserRuleCall_2_0_0; }

		//"entity"
		public Keyword getEntityKeyword_2_1() { return cEntityKeyword_2_1; }

		//id=ID
		public Assignment getIdAssignment_2_2() { return cIdAssignment_2_2; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_2_2_0() { return cIdIDTerminalRuleCall_2_2_0; }

		//name=STRING?
		public Assignment getNameAssignment_2_3() { return cNameAssignment_2_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_3_0() { return cNameSTRINGTerminalRuleCall_2_3_0; }

		//"{" (childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}" | ";"
		public Alternatives getAlternatives_2_4() { return cAlternatives_2_4; }

		//"{" (childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}"
		public Group getGroup_2_4_0() { return cGroup_2_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_4_0_0() { return cLeftCurlyBracketKeyword_2_4_0_0; }

		//(childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)*
		public Alternatives getAlternatives_2_4_0_1() { return cAlternatives_2_4_0_1; }

		//childEntities+=Entity
		public Assignment getChildEntitiesAssignment_2_4_0_1_0() { return cChildEntitiesAssignment_2_4_0_1_0; }

		//Entity
		public RuleCall getChildEntitiesEntityParserRuleCall_2_4_0_1_0_0() { return cChildEntitiesEntityParserRuleCall_2_4_0_1_0_0; }

		//childLinks+=Link
		public Assignment getChildLinksAssignment_2_4_0_1_1() { return cChildLinksAssignment_2_4_0_1_1; }

		//Link
		public RuleCall getChildLinksLinkParserRuleCall_2_4_0_1_1_0() { return cChildLinksLinkParserRuleCall_2_4_0_1_1_0; }

		//childPorts+=Port
		public Assignment getChildPortsAssignment_2_4_0_1_2() { return cChildPortsAssignment_2_4_0_1_2; }

		//Port
		public RuleCall getChildPortsPortParserRuleCall_2_4_0_1_2_0() { return cChildPortsPortParserRuleCall_2_4_0_1_2_0; }

		//childRelations+=Relation
		public Assignment getChildRelationsAssignment_2_4_0_1_3() { return cChildRelationsAssignment_2_4_0_1_3; }

		//Relation
		public RuleCall getChildRelationsRelationParserRuleCall_2_4_0_1_3_0() { return cChildRelationsRelationParserRuleCall_2_4_0_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4_0_2() { return cRightCurlyBracketKeyword_2_4_0_2; }

		//";"
		public Keyword getSemicolonKeyword_2_4_1() { return cSemicolonKeyword_2_4_1; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIDTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cChildEntitiesAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cChildEntitiesEntityParserRuleCall_5_0_1_0_0 = (RuleCall)cChildEntitiesAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cChildLinksAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cChildLinksLinkParserRuleCall_5_0_1_1_0 = (RuleCall)cChildLinksAssignment_5_0_1_1.eContents().get(0);
		private final Assignment cChildPortsAssignment_5_0_1_2 = (Assignment)cAlternatives_5_0_1.eContents().get(2);
		private final RuleCall cChildPortsPortParserRuleCall_5_0_1_2_0 = (RuleCall)cChildPortsAssignment_5_0_1_2.eContents().get(0);
		private final Assignment cChildRelationsAssignment_5_0_1_3 = (Assignment)cAlternatives_5_0_1.eContents().get(3);
		private final RuleCall cChildRelationsRelationParserRuleCall_5_0_1_3_0 = (RuleCall)cChildRelationsAssignment_5_0_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_0_2 = (Keyword)cGroup_5_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		
		//Entity:
		//	{Entity} annotations+=Annotation* "entity" id=ID name=STRING? ("{" (childEntities+=Entity | childLinks+=Link |
		//	childPorts+=Port | childRelations+=Relation)* "}" | ";");
		public ParserRule getRule() { return rule; }

		//{Entity} annotations+=Annotation* "entity" id=ID name=STRING? ("{" (childEntities+=Entity | childLinks+=Link |
		//childPorts+=Port | childRelations+=Relation)* "}" | ";")
		public Group getGroup() { return cGroup; }

		//{Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//"entity"
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }

		//id=ID
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_3_0() { return cIdIDTerminalRuleCall_3_0; }

		//name=STRING?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }

		//"{" (childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}" | ";"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"{" (childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0_0() { return cLeftCurlyBracketKeyword_5_0_0; }

		//(childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//childEntities+=Entity
		public Assignment getChildEntitiesAssignment_5_0_1_0() { return cChildEntitiesAssignment_5_0_1_0; }

		//Entity
		public RuleCall getChildEntitiesEntityParserRuleCall_5_0_1_0_0() { return cChildEntitiesEntityParserRuleCall_5_0_1_0_0; }

		//childLinks+=Link
		public Assignment getChildLinksAssignment_5_0_1_1() { return cChildLinksAssignment_5_0_1_1; }

		//Link
		public RuleCall getChildLinksLinkParserRuleCall_5_0_1_1_0() { return cChildLinksLinkParserRuleCall_5_0_1_1_0; }

		//childPorts+=Port
		public Assignment getChildPortsAssignment_5_0_1_2() { return cChildPortsAssignment_5_0_1_2; }

		//Port
		public RuleCall getChildPortsPortParserRuleCall_5_0_1_2_0() { return cChildPortsPortParserRuleCall_5_0_1_2_0; }

		//childRelations+=Relation
		public Assignment getChildRelationsAssignment_5_0_1_3() { return cChildRelationsAssignment_5_0_1_3; }

		//Relation
		public RuleCall getChildRelationsRelationParserRuleCall_5_0_1_3_0() { return cChildRelationsRelationParserRuleCall_5_0_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_0_2() { return cRightCurlyBracketKeyword_5_0_2; }

		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}

	public class LinkableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Linkable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPortParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRelationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Linkable:
		//	Entity | Port | Relation;
		public ParserRule getRule() { return rule; }

		//Entity | Port | Relation
		public Alternatives getAlternatives() { return cAlternatives; }

		//Entity
		public RuleCall getEntityParserRuleCall_0() { return cEntityParserRuleCall_0; }

		//Port
		public RuleCall getPortParserRuleCall_1() { return cPortParserRuleCall_1; }

		//Relation
		public RuleCall getRelationParserRuleCall_2() { return cRelationParserRuleCall_2; }
	}

	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cSourceLinkableCrossReference_3_0 = (CrossReference)cSourceAssignment_3.eContents().get(0);
		private final RuleCall cSourceLinkableIDTerminalRuleCall_3_0_1 = (RuleCall)cSourceLinkableCrossReference_3_0.eContents().get(1);
		private final Keyword cToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetLinkableCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetLinkableIDTerminalRuleCall_5_0_1 = (RuleCall)cTargetLinkableCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Link:
		//	annotations+=Annotation* "link" name=STRING? source=[Linkable] "to" target=[Linkable] ";";
		public ParserRule getRule() { return rule; }

		//annotations+=Annotation* "link" name=STRING? source=[Linkable] "to" target=[Linkable] ";"
		public Group getGroup() { return cGroup; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_0_0() { return cAnnotationsAnnotationParserRuleCall_0_0; }

		//"link"
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }

		//name=STRING?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//source=[Linkable]
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }

		//[Linkable]
		public CrossReference getSourceLinkableCrossReference_3_0() { return cSourceLinkableCrossReference_3_0; }

		//ID
		public RuleCall getSourceLinkableIDTerminalRuleCall_3_0_1() { return cSourceLinkableIDTerminalRuleCall_3_0_1; }

		//"to"
		public Keyword getToKeyword_4() { return cToKeyword_4; }

		//target=[Linkable]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }

		//[Linkable]
		public CrossReference getTargetLinkableCrossReference_5_0() { return cTargetLinkableCrossReference_5_0; }

		//ID
		public RuleCall getTargetLinkableIDTerminalRuleCall_5_0_1() { return cTargetLinkableIDTerminalRuleCall_5_0_1; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Keyword cPortKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIDTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Port:
		//	{Port} annotations+=Annotation* "port" id=ID name=STRING? ";";
		public ParserRule getRule() { return rule; }

		//{Port} annotations+=Annotation* "port" id=ID name=STRING? ";"
		public Group getGroup() { return cGroup; }

		//{Port}
		public Action getPortAction_0() { return cPortAction_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//"port"
		public Keyword getPortKeyword_2() { return cPortKeyword_2; }

		//id=ID
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_3_0() { return cIdIDTerminalRuleCall_3_0; }

		//name=STRING?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Keyword cRelationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdIDTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Relation:
		//	{Relation} annotations+=Annotation* "relation" id=ID name=STRING? ";";
		public ParserRule getRule() { return rule; }

		//{Relation} annotations+=Annotation* "relation" id=ID name=STRING? ";"
		public Group getGroup() { return cGroup; }

		//{Relation}
		public Action getRelationAction_0() { return cRelationAction_0; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//"relation"
		public Keyword getRelationKeyword_2() { return cRelationKeyword_2; }

		//id=ID
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_3_0() { return cIdIDTerminalRuleCall_3_0; }

		//name=STRING?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	
	
	private TopLevelEntityElements pTopLevelEntity;
	private EntityElements pEntity;
	private LinkableElements pLinkable;
	private LinkElements pLink;
	private PortElements pPort;
	private RelationElements pRelation;
	
	private final Grammar grammar;

	private AnnotationsGrammarAccess gaAnnotations;

	@Inject
	public KaomGrammarAccess(GrammarProvider grammarProvider,
		AnnotationsGrammarAccess gaAnnotations) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaAnnotations = gaAnnotations;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.cau.cs.kieler.kaom.text.Kaom".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public AnnotationsGrammarAccess getAnnotationsGrammarAccess() {
		return gaAnnotations;
	}

	
	//TopLevelEntity returns Entity:
	//	{Entity} annotations+=ImportAnnotation* (annotations+=Annotation* "entity" id=ID name=STRING? ("{"
	//	(childEntities+=Entity | childLinks+=Link | childPorts+=Port | childRelations+=Relation)* "}" | ";"))?;
	public TopLevelEntityElements getTopLevelEntityAccess() {
		return (pTopLevelEntity != null) ? pTopLevelEntity : (pTopLevelEntity = new TopLevelEntityElements());
	}
	
	public ParserRule getTopLevelEntityRule() {
		return getTopLevelEntityAccess().getRule();
	}

	//Entity:
	//	{Entity} annotations+=Annotation* "entity" id=ID name=STRING? ("{" (childEntities+=Entity | childLinks+=Link |
	//	childPorts+=Port | childRelations+=Relation)* "}" | ";");
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Linkable:
	//	Entity | Port | Relation;
	public LinkableElements getLinkableAccess() {
		return (pLinkable != null) ? pLinkable : (pLinkable = new LinkableElements());
	}
	
	public ParserRule getLinkableRule() {
		return getLinkableAccess().getRule();
	}

	//Link:
	//	annotations+=Annotation* "link" name=STRING? source=[Linkable] "to" target=[Linkable] ";";
	public LinkElements getLinkAccess() {
		return (pLink != null) ? pLink : (pLink = new LinkElements());
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}

	//Port:
	//	{Port} annotations+=Annotation* "port" id=ID name=STRING? ";";
	public PortElements getPortAccess() {
		return (pPort != null) ? pPort : (pPort = new PortElements());
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}

	//Relation:
	//	{Relation} annotations+=Annotation* "relation" id=ID name=STRING? ";";
	public RelationElements getRelationAccess() {
		return (pRelation != null) ? pRelation : (pRelation = new RelationElements());
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}

	//// --------------------------
	////
	////   ANNOTATIONS
	////
	//// --------------------------
	//Annotation:
	//	CommentAnnotation | TagAnnotation | KeyStringValueAnnotation | TypedKeyStringValueAnnotation |
	//	KeyBooleanValueAnnotation | KeyIntValueAnnotation | KeyFloatValueAnnotation;
	public AnnotationsGrammarAccess.AnnotationElements getAnnotationAccess() {
		return gaAnnotations.getAnnotationAccess();
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//ValuedAnnotation returns Annotation:
	//	CommentAnnotation | KeyStringValueAnnotation | TypedKeyStringValueAnnotation | KeyBooleanValueAnnotation |
	//	KeyIntValueAnnotation | KeyFloatValueAnnotation;
	public AnnotationsGrammarAccess.ValuedAnnotationElements getValuedAnnotationAccess() {
		return gaAnnotations.getValuedAnnotationAccess();
	}
	
	public ParserRule getValuedAnnotationRule() {
		return getValuedAnnotationAccess().getRule();
	}

	//// e.g.: / ** semantic comment * /
	//CommentAnnotation returns StringAnnotation:
	//	value=COMMENT_ANNOTATION;
	public AnnotationsGrammarAccess.CommentAnnotationElements getCommentAnnotationAccess() {
		return gaAnnotations.getCommentAnnotationAccess();
	}
	
	public ParserRule getCommentAnnotationRule() {
		return getCommentAnnotationAccess().getRule();
	}

	//// e.g.: @HVlayout
	//TagAnnotation returns Annotation:
	//	"@" name=ExtendedID ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.TagAnnotationElements getTagAnnotationAccess() {
		return gaAnnotations.getTagAnnotationAccess();
	}
	
	public ParserRule getTagAnnotationRule() {
		return getTagAnnotationAccess().getRule();
	}

	//// e.g.: @layouter dot;   
	//KeyStringValueAnnotation returns StringAnnotation:
	//	"@" name=ExtendedID value=EString ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.KeyStringValueAnnotationElements getKeyStringValueAnnotationAccess() {
		return gaAnnotations.getKeyStringValueAnnotationAccess();
	}
	
	public ParserRule getKeyStringValueAnnotationRule() {
		return getKeyStringValueAnnotationAccess().getRule();
	}

	//// e.g.: @position[de.cau.cs.kieler.core.math.KVector] "(3,2)"
	//TypedKeyStringValueAnnotation returns TypedStringAnnotation:
	//	"@" name=ExtendedID "[" type=ExtendedID "]" value=EString ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.TypedKeyStringValueAnnotationElements getTypedKeyStringValueAnnotationAccess() {
		return gaAnnotations.getTypedKeyStringValueAnnotationAccess();
	}
	
	public ParserRule getTypedKeyStringValueAnnotationRule() {
		return getTypedKeyStringValueAnnotationAccess().getRule();
	}

	//// e.g.: @visible true;
	//KeyBooleanValueAnnotation returns BooleanAnnotation:
	//	"@" name=ExtendedID value=BOOLEAN ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.KeyBooleanValueAnnotationElements getKeyBooleanValueAnnotationAccess() {
		return gaAnnotations.getKeyBooleanValueAnnotationAccess();
	}
	
	public ParserRule getKeyBooleanValueAnnotationRule() {
		return getKeyBooleanValueAnnotationAccess().getRule();
	}

	//// e.g.: @minSpace 10;    
	//KeyIntValueAnnotation returns IntAnnotation:
	//	"@" name=ExtendedID value=INT ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.KeyIntValueAnnotationElements getKeyIntValueAnnotationAccess() {
		return gaAnnotations.getKeyIntValueAnnotationAccess();
	}
	
	public ParserRule getKeyIntValueAnnotationRule() {
		return getKeyIntValueAnnotationAccess().getRule();
	}

	//// e.g.: @minSpace 10.0;    
	//KeyFloatValueAnnotation returns FloatAnnotation:
	//	"@" name=ExtendedID value=FLOAT ("(" annotations+=Annotation* ")")?;
	public AnnotationsGrammarAccess.KeyFloatValueAnnotationElements getKeyFloatValueAnnotationAccess() {
		return gaAnnotations.getKeyFloatValueAnnotationAccess();
	}
	
	public ParserRule getKeyFloatValueAnnotationRule() {
		return getKeyFloatValueAnnotationAccess().getRule();
	}

	//// needed for importing other resources
	//ImportAnnotation:
	//	"import" importURI=STRING;
	public AnnotationsGrammarAccess.ImportAnnotationElements getImportAnnotationAccess() {
		return gaAnnotations.getImportAnnotationAccess();
	}
	
	public ParserRule getImportAnnotationRule() {
		return getImportAnnotationAccess().getRule();
	}

	//// allow strings without quotes as they don'c contain spaces
	//EString returns ecore::EString:
	//	STRING | ID;
	public AnnotationsGrammarAccess.EStringElements getEStringAccess() {
		return gaAnnotations.getEStringAccess();
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//ExtendedID returns ecore::EString:
	//	ID ("." ID)*;
	public AnnotationsGrammarAccess.ExtendedIDElements getExtendedIDAccess() {
		return gaAnnotations.getExtendedIDAccess();
	}
	
	public ParserRule getExtendedIDRule() {
		return getExtendedIDAccess().getRule();
	}

	//// --------------------------
	////
	////  Terminals...
	////
	//// --------------------------
	//// custom terminals
	//// custom terminal rule introducing semantic comments
	//terminal COMMENT_ANNOTATION:
	//	"/ **"->"* /";
	public TerminalRule getCOMMENT_ANNOTATIONRule() {
		return gaAnnotations.getCOMMENT_ANNOTATIONRule();
	} 

	//// modified version of Terminals.ML_COMMENT as
	//// COMMENT_ANNOTATION is not recognized correctly with original one 
	//terminal ML_COMMENT:
	//	"/ *" !"*"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaAnnotations.getML_COMMENTRule();
	} 

	//// generic terminals
	//// redefine INT terminal to allow negative numbers
	//terminal INT returns ecore::EInt:
	//	"-"? "0".."9"+;
	public TerminalRule getINTRule() {
		return gaAnnotations.getINTRule();
	} 

	//// make sure the Float rule does not shadow the INT rule
	//terminal FLOAT returns ecore::EFloatObject:
	//	"-"? "0".."9"+ ("." "0".."9"*) (("e" | "E") ("+" | "-")? "0".."9"+)? "f"? | "-"? "0".."9"+ "f";
	public TerminalRule getFLOATRule() {
		return gaAnnotations.getFLOATRule();
	} 

	//// introduce boolean values
	//terminal BOOLEAN returns ecore::EBooleanObject:
	//	"true" | "false";
	public TerminalRule getBOOLEANRule() {
		return gaAnnotations.getBOOLEANRule();
	} 

	//// custom terminal rule for strings
	//// type identifiers can reference Java classes
	////terminal TypeId returns ecore::EString:
	////    '[' ('a'..'z'|'A'..'Z'|'_'|'.') ('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')* ']';
	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"";
	public TerminalRule getSTRINGRule() {
		return gaAnnotations.getSTRINGRule();
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaAnnotations.getIDRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaAnnotations.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaAnnotations.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaAnnotations.getANY_OTHERRule();
	} 
}
